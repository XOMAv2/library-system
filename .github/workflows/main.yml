name: Deploy project
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Upload sh file
        uses: actions/upload-artifact@v2
        with:
          name: test
          path: ./build/kube.sh
      - name: Upload yaml file
        uses: actions/upload-artifact@v2
        with:
          name: test
          path: ./docker-compose.yml
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          mkdir ../build
          cp -TR . ../build
          tar -cvf deploy.tar ../build/

      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER_NAME }}
          key: ${{ secrets.AWS_PASSWORD }}
          source: "deploy.tar"
          target: "/home/ubuntu/"
      - name: Transfer test file to server
        uses: appleboy/scp-action@v0.0.10
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER_NAME }}
          key: ${{ secrets.AWS_PASSWORD }}
          source: "test/kube.sh"
          target: "/home/ubuntu/"
          strip_components: 1
      - name: Transfer test file to server
        uses: appleboy/scp-action@v0.0.10
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER_NAME }}
          key: ${{ secrets.AWS_PASSWORD }}
          source: "test/docker-compose.yml"
          target: "/home/ubuntu/"
          strip_components: 1
      - name: DockerHub Login
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_DOCKER_ID }} --password-stdin
      - name: Build Docker Images
        run: docker-compose -f docker-compose.yml up --build -d
      - name: Push Docker Image
        run: docker-compose push
      - name: kube.sh in AWS
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER_NAME }}
          key: ${{ secrets.AWS_PASSWORD }}
          script: chmod +x kube.sh && ./kube.sh
